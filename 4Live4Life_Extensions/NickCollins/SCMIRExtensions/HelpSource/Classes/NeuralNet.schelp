title:: NeuralNet
summary:: standard NN machine learning
categories:: SCMIR, Machine Learning
related:: Classes/NaiveBayes, Classes/GMM

description::

Fully connected Multi Layer Perceptron (one hidden layer) trained through back propagation, online learning (updates after one training example and not after set)
See Tom Mitchell, Machine Learning, McGraw-Hill, 1996, p.98

By Nick Collins and Chris Kiefer.

classmethods::

method::new

argument::nin 
Number of input units
argument::nhidden 
Number of hidden units
argument::nout 
Number of output units	
argument::learningrate 
Number of output units	
argument::initweight 
The weights (including biases) are initialised to (initweight.rand2) ie, with random linear distribution from -initweight to +initweight 
		
code::
// creation
n = NeuralNet(2,2,1);
n.train1([0,1],[1]); //train on [0,1] -> 1
n.calculate([0,1]);
::



examples::

code::

// train up Neural Net on XOR problem
n = NeuralNet(2,2,1,0.5,1.0); //fast learning rate and initial weights -1.0 to 1.0


(
//approximate exclusive OR in 2000 epochs
2000.do({
n.train1([0,1],[1]); //train on [0,1] -> 1
n.train1([1,0],[1]); //train on [1,0] -> 1
n.train1([0,0],[0]); //train on [0,1] -> 1
n.train1([1,1],[0]); //train on [1,0] -> 1
});
)

//tests
n.calculate([1,1]);
n.calculate([0,0]);
n.calculate([1,0]);
n.calculate([0,1]);


//train as batch process, test generalisation
n = NeuralNet(2,2,1,0.5,1.0); //fast learning rate and initial weights -1.0 to 1.0

d= [[[1,1],[0]],[[1,0],[1]], [[0,0],[0]]];//training data set in form [inputs array, outputs array]

n.train(d,0.01,1000,true, 0.01); //train up, with status updates, max of 1000 epochs or total error below 0.05
//will attempt to calculate 1 epoch each 0.01 seconds (well, actually, will delay for 0.01 between heavy calculation periods...

n.isTraining=false; //interrupt


n.calculate([1,1]); //originals
n.calculate([0,0]);
n.calculate([1,0]);


n.calculate([0,1]); //generalisation in wrong place, but then, didn't give enough training examples to pick out the right error surface!



//////test C external for training

n = NeuralNet(2,2,1,0.5,1.0); //fast learning rate and initial weights -1.0 to 1.0

d= [[[1,1],[0]],[[1,0],[1]], [[0,0],[0]]];//training data set in form [inputs array, outputs array]

n.trainExt(d,0.01,1000); //train up, with status updates, max of 1000 epochs or total error 



//////////////////////////////////////////////
//WARNING: the following example should be tested first by training over only 1 epoch, then 10, then more, The reason is that you may otherwise not see any postlns giving feedback on where the calculation is; it will look like SC has gone into beechball crash, but it's just frantically calculating. you can adjust the wait parameters for train to adjust the training to fit your machine. 

 

// train up Neural Net as a symbolic key detector; 
//input features critical; let's try one input node for each chroma, and one output for each of the 24 major and minor keys
//we don't want just one output, because it's helpful to see a probability distribution over possible keys; music is full of ambiguity

n = NeuralNet(12,24,24,0.1,1.0); //set medium learning rate and initial weights -1.0 to 1.0

//we want to create a nice bunch of data for training; sourcing from annotated MIDI Files etc is a good way to go. But hey, let's blag it using standard music theoretic stuff; we'll combine variuos sources:


//training examples 1 = the scales
(
var major, minor, tmp, tmp2; 
var diminished; 

d=List[]; //to hold training set

major= [1,0,1,0,1,1,0,1,0,1,0,1];
minor= [1,0,1,1,0,1,0,1,1,0,0,1]; 

12.do{|j|

tmp= major.rotate(j.neg); 
tmp2= 0.dup(24);
tmp2[j]=1;

d.add([tmp,tmp2]);

tmp= minor.rotate(j.neg); 
tmp2= 0.dup(24);
tmp2[12+j]=1;

d.add([tmp,tmp2]);
}; 

//training examples 2= the Krumhansl Kessler profiles

//rescaled so min probe tone rating (tritone) is 0 and max is 1
minor= [ 1, 0.036939313984165, 0.25857519788917, 0.74934036939306, 0.015831134564644, 0.2612137203166, 0, 0.58311345646435, 0.37994722955143, 0.03957783641161, 0.21108179419524, 0.16622691292875 ];

//b2 is 0
major= [ 1, 0, 0.30339805825243, 0.024271844660192, 0.52184466019418, 0.45145631067962, 0.070388349514557, 0.71844660194177, 0.038834951456311, 0.34708737864078, 0.014563106796109, 0.15776699029126 ]; 

12.do{|j|

tmp= major.rotate(j.neg); 
tmp2= 0.dup(24);
tmp2[j]=1;

d.add([tmp,tmp2]);

tmp= minor.rotate(j.neg); 
tmp2= 0.dup(24);
tmp2[12+j]=1;

d.add([tmp,tmp2]);
}; 

//training examples 3= individual chords which may be ambiguous between keys; major and minor chords

major= [1,0,0,0,1,0,0,1,0,0,0,0];
minor= [1,0,0,1,0,0,0,1,0,0,0,0];

12.do{|j|

tmp= major.rotate(j.neg); 
tmp2= 0.dup(24);
tmp2[j]=1;
tmp2[(j+5)%12]=1;	//circle of fifths back one
tmp2[(j+7)%12]=1;	//circle of fifths forward one
tmp2[(j-7)%12+12]=1; //minor dominant chord

d.add([tmp,tmp2]);

tmp= minor.rotate(j.neg); 
tmp2= 0.dup(24);
tmp2[12+j]=1;
tmp2[(j+5)%12 +12]=1; //as subdominant
tmp2[(j-2)%12]=1;	//as supertonic in major
tmp2[(j-4)%12]=1; //as mediant in major
tmp2[(j+3)%12]=1; //as submediant in major
	
d.add([tmp,tmp2]);

}; 

//training examples 4= dominant sevenths, which only exist in one key for each of major and minor (in general, a key tracker would have to take more than one chord context into consideration; this could be simulated by mixing the notes of the last N chords as input)

major= [1,0,0,0,1,0,0,1,0,0,1,0];
minor= [1,0,0,1,0,0,0,1,0,0,1,0];

12.do{|j|

tmp= major.rotate(j.neg); 
tmp2= 0.dup(24);
tmp2[(j-7)%12]=1;
tmp2[(j-7)%12+12]=1;

d.add([tmp,tmp2]);

tmp= minor.rotate(j.neg); 
tmp2= 0.dup(24);
tmp2[(j+5)%12 +12]=1; //as subdominant
tmp2[(j-2)%12]=1;	//as supertonic in major
tmp2[(j-4)%12]=1; //as mediant in major
tmp2[(j+3)%12]=1; //as submediant in major
	
d.add([tmp,tmp2]);

}; 

//training examples 5= diminished, maximally ambiguous for four major and four minor keys; favour minor keys slightly because the major involve a flattened sixth

diminished= [1,0,0,1,0,0,1,0,0,1,0,0];

12.do{|j|

tmp= diminished.rotate(j.neg); 
tmp2= 0.dup(24);
tmp2[(j+1)%12]=0.8;
tmp2[(j+4)%12]=0.8;
tmp2[(j+7)%12]=0.8;
tmp2[(j+10)%12]=0.8;


tmp2[(j+1)%12+12]=1;
tmp2[(j+4)%12+12]=1;
tmp2[(j+7)%12+12]=1;
tmp2[(j+10)%12+12]=1;

d.add([tmp,tmp2]);
}; 
)

d.size  //108 training examples

Post << d << nl;


//one epoch test
n.train(d,0.01,1,true,0.5,0.001); //train up, with status updates, max of 1000 epochs or total error below 0.05


//CAREFUL- test this does post as it goes
n.train(d,0.01,10,true,0.5,0.005); //train up, with status updates, max of 1000 epochs or total error below 0.05


n.learningrate=0.2;
//now train up
n.train(d,0.01,500,true,0.5,0.005); //train up, with status updates, max of 1000 epochs or total error below 0.05


//generalisation tests and others
a= n.calculate([1,0,0,1,0,0,0,1,0,0,0,1]); //C minor maj 7
a= n.calculate([1,0,0,0,1,0,0,1,0,0,0,1]); //C maj 7
a= n.calculate([1,1,0,0,0,1,0,0,1,0,0,0]); //Db maj 7
a= n.calculate([1,0,0,0,1,0,0,1,0,0,0,0]); //is this in C? 
a= n.calculate([1,0,0,0,0,1,0,0,1,0,0,0]); //F minor 

a.plot



//you can look at parameters
Post << n.weightsh << nl;
Post << n.weightso << nl;
Post << n.biash << nl;
Post << n.biaso << nl;


//and get net parameters for saving
c= n.getNN; 

//view data, could be quite a few numbers! 
Post << c << nl;

g= NeuralNet.newExisting(c); //make a new NN from these parameters




////////////////one stored from earlier for the key detector problem; load and keep training? (had reached error of 36 total over the training set)

(
c=[ 12, 24, 24, [ [ 3.4260271209875, -3.5690700986353, 2.6980445682313, -2.3592185001485, 4.1422719699406, -3.7065525251221, 5.0621717487362, -1.0895094675782, 2.6367269931616, -2.1388772409233, 0.90952675337849, -4.1407899408322 ], [ 1.7122235236564, -4.9064643796365, 3.1703777156144, -0.93021809078268, 0.83715007201796, 7.9519551280764, -3.3959994994238, 1.2205798016572, -3.3232131203602, 5.7952698900065, 0.98945038423475, 4.9638516472125 ], [ -4.7738331077147, -0.75925177210593, 2.0110185508939, 3.182684832245, 2.2572030680155, -0.039039042118145, -1.9379593678344, 6.9072683836825, 0.32298629163023, -3.5111637203588, 2.959196868085, 2.0680481868783 ], [ -0.17698423187561, 1.7633863868064, 1.2489472213039, 1.6659198477109, 3.5952634331816, -1.65065564985, 1.3824846204618, 2.9163727146217, -2.44810160328, 5.3247663730483, -6.3671403801744, 2.6291689957053 ], [ -3.8674432804373, 2.5610044949234, -3.3605614744866, -4.7824154894654, 0.46143255553122, 0.38475267576011, -3.5578668460549, 1.759166320404, 0.16951066494457, -3.8864973369987, 2.7728260265572, -1.1343161040286 ], [ 1.3504488198834, -2.2353453413992, 4.9283403088796, 0.52089309059469, 2.5354252137588, 0.27583449159457, -1.3124422094989, 5.0291935439489, 2.7985126313177, -3.1121783522466, -2.2890333716508, 6.3554786958803 ], [ 4.1924017817896, 0.63262000583215, 0.10113886359193, 1.6673195749578, -0.54422425112078, 3.543985614014, 4.4030014691609, 1.7190455218704, -5.1535322471318, 4.1360317485907, 3.2087840084018, -3.6649685388447 ], [ -4.664757551708, -2.7837703455139, 2.3783636915122, -1.4563656852354, -4.6413279742266, 3.3273609249962, 2.5595201194872, -3.4333140186628, 0.37282364088512, 2.7179173283113, -5.1020222773432, 0.5693566376755 ], [ -0.53684728080163, 4.0507336813302, 0.41740286109845, -3.9080256971561, 2.894841128682, 2.3174213079655, -1.7107338155769, 4.7560050373273, 1.4219598588788, 1.3776578973439, 1.7051103698784, -3.3797184875752 ], [ -1.6204447939972, 0.31211516236696, -7.4406778752817, -4.416998821006, 1.6558990327601, -1.392303441658, -1.8627355366849, 0.6292153722401, 0.053979547724983, 2.8546292507974, -2.4159851413541, -0.78425400316377 ], [ -1.3870139737605, 0.074198579879689, 0.8177029098209, 1.3593854780843, -0.95666411576703, -2.252590924251, -1.6623057510083, 0.75551591291799, -6.7690628681399, -1.5579315285301, 0.27310682138419, -5.4909315971984 ], [ -2.6210504118864, 0.61000473597101, -0.05466618180908, -1.8090839513891, 5.7446542400164, 5.9260929809784, -2.1208803899106, -2.5108892767844, 4.3495245678407, -0.40498307942207, 1.9517886982035, 3.162679291786 ], [ -0.046219457165426, 3.9601323551607, -0.67148119100517, 2.51547133489, -4.8124812029753, 1.7502102418318, 3.9119105677524, -3.7500250127971, 3.8319594960205, -3.4706801774793, 0.9741968327151, 1.4273460572251 ], [ 6.5643387193186, -3.1041696289235, 6.8537936394006, 3.2072638643209, -5.1060680867816, 4.6516833993317, -0.21987806514773, 1.9898905774675, -1.0916339828566, -3.7843038956863, 2.4664238707877, -5.2531379422893 ], [ -1.4177708410099, 6.987198740421, -0.36712227313611, -0.74742553720278, -3.6610007350847, 2.4937993245562, 0.81134806818993, -0.37261131529521, 5.5661650623001, -0.17905410303123, 3.0477496629756, -2.7653780676504 ], [ 3.2232317017197, -0.82811628633525, 0.83061975930792, 3.1980642925675, -0.81991612745074, -7.5676322237927, 0.75887307581329, -2.5490378182866, 3.7478091606297, 2.0541931009091, -1.4452653130191, 1.0811191906231 ], [ -3.6835997123232, 0.52461777514782, -2.8570485644691, 0.31061958084354, 4.673309234681, -2.6840536559317, 3.0162265361036, -2.9303272595824, 2.1512679420758, 0.086818933633632, -2.6142209161406, 4.0317421014026 ], [ -5.1672637054347, -4.8646175657448, -2.918828832508, 4.4029675449529, -4.4022752642111, -0.30006038205413, 2.4953355931498, -4.8945385202464, -1.5846089421513, -0.70447219226052, 4.2150640626356, -0.3638668552549 ], [ -0.36930178729492, 3.9583647279957, 2.4806749986964, 4.2049089348699, 3.4140272344236, -2.2761803618221, 4.6998414000663, -0.33318737558573, -1.50738484029, 5.2408190136741, -2.5937340332247, -2.7697171208808 ], [ -7.1776646312229, 2.5661265022233, 4.3336697072739, -4.6181333091008, 1.3550895476821, -1.133436715806, 1.0923646701479, 3.3984631679516, -5.1505850812394, 2.4842214090826, -2.4568240007541, -0.95521809001983 ], [ -3.6092733419053, 0.24906685014716, 6.9433648552815, 3.1120844140522, -2.1586882961921, -3.5029911878162, 6.2078306730562, -0.14133262366357, 1.4400968243557, 3.4593472047519, 0.46158973763056, 4.7956947013845 ], [ 5.0073594075, 1.0973104535638, -2.4315719682889, 3.2446624426334, 0.12455188142781, 4.0679210266401, 1.048907050424, 0.53217572003797, 1.7900167456561, 5.8820052434899, -4.0311784347467, -5.3256208410654 ], [ -4.7142531429484, 2.152347603594, 0.29243771988798, -2.2725397014975, -1.7780409082879, 3.4173011410539, 4.3951205915194, 3.4888735790585, -3.6937984468379, -3.4132029246978, 4.9247019756358, 1.1163040293791 ], [ -4.0519412616674, 1.6573893035758, 3.1792056484263, -2.6706421746371, 1.6515894010313, 2.568293510809, 0.59968331236762, 1.0467650846962, -1.7479822435554, 2.3091422447794, 1.5284820746577, 4.0182996260411 ] ], [ 0.29553606078456, 0.84531136790076, -0.88972929349253, -1.1287552720907, -4.2569937083635, 1.155247130713, 0.40286426114559, -3.1573987582032, 2.0094994426153, 0.21276074823816, 1.8761241951216, 3.4814154510376, -0.15681238864692, -1.1277113897067, 2.5917444995439, 1.3215452655794, 4.3552506508483, -0.14661715392792, 0.043352422886751, -2.7991238326643, 0.19206116216467, 1.086313391128, -0.38293439400099, 2.3517515033562 ], [ [ -3.235135667643, -4.2174660773822, 2.049482956978, 4.2597280007507, 5.6972039681954, -5.0095363085496, -3.3869693654572, -1.7473253297111, -2.1484954331154, -3.5031173357574, 1.5213451494028, 6.1773687208672, -2.5899562366167, 5.6375078628817, -2.6688231153404, -0.20632510892052, 1.9383021969215, 4.8482459520238, -0.55450743610169, 0.69596254473582, -5.2515396434648, -0.045914840307208, -4.1827610201735, 2.0927151958576 ], [ 4.3982407385639, 2.6291620842684, -2.4131765626252, 1.7526048783505, -1.4282132819797, -1.1626315466064, 0.79716328695063, -4.2096947439462, -1.5101318134484, 1.1369577716443, 2.2556569637027, -1.8876410179715, 2.1156259195146, -4.815150359931, -1.8886163991012, 1.8299328315259, 1.1987709860655, 2.2460397360574, 0.20263642679024, -5.8917703765945, -3.411867585273, -6.7124698551061, 0.92719733888682, 0.42313744806325 ], [ -4.4977017847196, -5.0335140525812, 2.1174969798918, 2.4008576011624, -0.63941417586898, 1.8640824504131, -5.8263034397857, 2.1736602090454, -0.68138101065446, 5.0517274702036, 3.1251913314969, 2.4138310170854, -1.3603339381328, 2.6580467122975, 3.8000060125449, -2.8170799772827, -5.3115230499244, 5.1657930897274, -0.21554138699609, -5.6506211429836, -1.2966043991768, -1.4816560875291, -1.4524885916596, 1.9817404343511 ], [ 2.5861638352408, 2.5157394360559, -3.5854883843179, -2.361847717031, 3.0705306154315, 3.1808287633487, -0.9323961812122, 0.5287786803132, 1.7332442009685, 1.8172015797949, 4.2014227048791, -5.5175865857395, -0.34760851855454, -0.24882307477689, 4.6968724597626, 3.7560220041594, -1.2616100735104, -2.2501024182972, -5.1780070189029, 7.1411359843286, -2.6310972693657, -3.2170485837397, -5.5474954504773, -0.33973930356548 ], [ 2.4470962564563, 0.35222618375112, -2.9319063079702, 2.5381523704689, -0.45691133895641, -4.2165114669878, -0.53085098712857, 0.86686104867228, -2.8587639360945, 3.690493608278, -0.052350627730518, -2.8052445928646, 0.73902090626683, -1.1221087310561, -5.7902120703689, -0.11616460637906, 2.2796529761868, 0.60100486858402, 0.70283342995373, 3.5238404457808, 2.1389875448859, -3.7808550541969, 2.9392125907223, -2.1721538974771 ], [ -0.45778606236353, 0.13211963056388, -0.23064719406293, -2.4355917213921, 2.0353982830929, -4.4235493476769, -1.945360113554, 2.0921313211958, 1.2072176188812, -3.6862034293154, 3.3356639692484, 2.5180277257141, -1.4711546747934, 6.0014977554852, -6.1236535888778, 6.8724869809847, 5.3618457551777, 1.0867586194268, -6.6168232405353, 4.105491861818, -4.7617814523572, 1.5420945861045, 0.3018199005089, 0.20132794867083 ], [ -2.018012629733, -0.28605426738291, -4.1340733139738, -2.3467077068343, 0.41563222471982, 1.7670746796501, 0.17612909678043, -1.6643106408483, 2.072415106305, 1.7066246742198, -1.8034710966827, 1.8191184572757, -0.59025279722144, -4.1669813342414, -6.2183499056461, -2.1311255755702, 4.5558937940549, 7.0509881395533, 2.0207975662375, -0.34751638189477, -4.4176456993131, -2.9746739722395, 2.2546407676883, 1.2298300334642 ], [ -1.0175179550092, -3.07637677461, 0.97889960778551, 3.544173729786, -0.13756243623864, -3.7084202104765, -6.1252299029418, -0.1472169973691, -1.6261017800859, 3.4746269906685, 2.8711808401276, 0.20480410372386, -0.63866496943471, 4.2841113059538, 0.36503718637444, -1.5586147917549, 1.7938161209526, 5.0366451404194, 1.5738066558098, -2.8420633235605, -3.0868743807664, 1.250182135454, -2.9318561343312, 1.41355349409 ], [ -0.55137812158748, 3.2909081470554, 0.50489876759176, -1.1001946361239, -0.74576344426908, 1.554311409049, -3.5969297172679, 6.0084693365498, 0.44853512502084, 5.8972948803271, 5.8359199997555, -1.641638170299, -3.7604565637448, -1.7316823608016, 3.7315776545715, 0.031721499713776, -4.0085543337898, -2.133452873249, -3.8970036731064, 0.38915317884338, 2.7795081856, 0.17185389847189, -5.461704576285, -2.4732783766299 ], [ 0.73909619861378, -4.4752778540791, -2.7440854848108, -0.78546454882449, 1.2414881011935, 0.90988706032607, -1.8215055248471, 3.0457766081084, -4.0443184824263, 6.7557867747917, -1.152026556882, 0.10940656871197, 2.8438134598949, 1.431894809183, 1.2798043379274, 1.7925767601791, 0.72520851132432, -1.4967191157138, 1.9018321012344, 4.8719342696278, -2.482075444606, -4.9106026947227, 0.81133419377458, -3.1163503626045 ], [ -2.328974587168, 4.410092482335, 1.3093300127611, 0.40693222729631, 3.0041238807285, -4.2467254234833, 1.4420048518385, 0.87727401273031, 1.1079832926308, -2.4548977935656, -1.518262363375, -4.1597919352459, -3.3275528306838, 1.6094873119222, 3.3314463928041, 4.7841723946802, 3.9937724706334, -0.41884677792854, -5.8150363999746, 6.0986962672893, -4.6206435137466, 1.3789970442643, 1.3354606720509, -5.8898201704803 ], [ 2.2834433659909, -2.1963211014277, -5.0867154967706, -6.4769857829997, -1.2433274834804, -0.82928017526543, -1.1187448648513, 4.1776859324771, -0.078423187691956, 2.0603285173202, -1.5578157469793, 6.0127325161754, 1.1238966306524, 0.71419244612402, -8.2378697762486, -1.1411118056615, 5.5649622439293, -4.963023703403, 2.9632481064708, -1.814141610761, -1.2780155069066, -5.0938279199211, 1.7802276892043, 0.60803412089586 ], [ -2.0410238687063, -0.64800259088593, 0.73440692405549, 2.4785281800149, 6.910284949432, 2.7258771633883, 4.0535409943864, -1.214940372132, -1.0141051491691, 0.57244797786668, 1.1167448760295, 0.39710870821937, 1.8448002543849, 0.14663777786904, 3.6855987927271, 2.0151897498199, -5.2769101756054, -2.7309005366723, -1.2922471296155, 3.0386359391281, -5.0426172985807, -4.106220268689, -7.7322507969559, -2.1972805631188 ], [ 4.5142826471, 3.7933278089306, 0.18932568503896, 1.0893627681855, -0.70512660499457, -1.8047872051781, -1.0610950290077, -2.7232905767315, -1.9648145777911, 2.0627984012525, 0.59594845801077, -5.3059431550069, 1.9093695925545, -1.5137644775508, -2.1754922047921, -0.57425387814929, 3.4336861282287, -1.161437442138, 0.94399863891907, 2.2005446832552, 1.4507549514577, -7.7907636033844, -1.3813093843229, -2.7354932265652 ], [ -6.249325033611, -0.92262133468358, 0.31236972625399, -0.73920219454204, -0.490695866803, -5.8113006710854, -4.2551380819348, 2.9574816923376, 0.14560246326284, -1.481014371948, 3.4945020726767, -1.7051245961133, 0.4050240518606, 5.6954865481144, 2.009557577042, 0.35830555540066, 0.30312808561882, 1.7044634520037, 1.2526126283393, -3.3037554144326, 0.89956920960474, -2.1413256309496, 1.3198177449818, 0.44054699883698 ], [ 2.0002303290093, -1.801250080653, -6.7662409618704, 0.41241855119681, 5.6542716811095, 2.4296201387749, 0.66936672317158, 3.5957058221413, 1.5508609184287, -0.11953019011004, 2.0094189197289, -2.0920839766868, -6.1328770692646, 0.53965960526917, -0.44484222965855, -1.7019662202487, 1.897035061103, -0.57946815409508, 0.73549241274991, -2.2979050292429, 1.2775504866977, -1.3081738439097, 0.15312796590252, 0.18937530091622 ], [ -4.4688514918183, 0.98996879082216, -2.2471069086917, -1.086295019445, 2.6810587541391, -1.6647430800804, -7.4468885689665, -2.7584123693111, 2.4617783741259, 0.42481172588023, 1.2031451114646, -6.7288325784095, 4.2940781286583, -1.1345538560527, 0.77275969831582, 0.18301654956747, 3.7331625507905, 1.2072418027536, 1.793384285208, -1.9720038533683, 0.18234357949911, 2.1124727761229, -2.9477922592819, -1.1117959999139 ], [ 3.736402909243, 0.62710964733663, 2.3248039576296, -1.1573042357379, -0.36934974505945, -0.037845701041137, -5.0533802267462, 5.1549049984, 1.4414191089887, 0.067451796586841, 5.8073664793594, -2.6141681342777, -3.1428402211093, 4.4967627090453, -0.97507348877192, 1.0380164107572, 0.22105692053384, -4.4824875076535, -0.53180173528265, -4.2519048628407, -1.5656550235142, -1.6897329843773, 2.0945245929021, -3.0487233680802 ], [ -2.1658747655305, -0.53320593515879, -3.165526161344, 1.3957509585381, 3.8170295557692, 0.84777532269889, 1.5366150332838, 5.8080591249924, -3.55672862166, 1.03785247421, 0.98917024429599, -1.078871482702, 2.2677316537105, -6.623808732499, -1.1601282502553, -0.75086881908085, 0.092670539542521, 1.0361918195921, 1.8966873714484, 2.25313270976, -2.918764250422, -1.2041366851996, 4.017424025749, -0.33795550153806 ], [ 4.0706018465525, 3.2475696133613, -0.96324215366015, 0.12472818670531, 2.2741038109955, -1.17882309188, 3.3755846165407, -0.50234478328255, -2.3846426414627, -0.40068678831356, 0.0016361446643691, -4.4087435608718, 3.8405092687178, 1.6126477688348, -0.89317387335063, -5.2239843376348, 1.0663910582561, 1.8696056118691, -6.7911212600709, -1.5359694507961, -1.9496761889048, -0.080314827771674, -0.60071010868984, -0.052948571736809 ], [ -3.4731171568258, 2.1311937426602, 1.6632190360026, 1.8605567992464, 0.029124669981763, -2.3472802636394, 1.141237426888, -1.2029752138487, -0.55349804209517, 3.694736274391, 1.2580679333177, 0.16396881830423, -3.8152630568615, -6.9156818099437, -4.77908874913, 0.54088988759404, 0.9674182004772, -1.7018217959881, -0.24238116773772, -1.5422519624845, 1.2002368749134, 1.8035857688737, -0.39298220686903, -1.8862652276 ], [ 1.5053842428209, -3.277289256012, 3.1262951450552, -2.5470038190285, 3.3434260742337, 2.6022272361505, -0.87263301129838, -0.029155179805431, -6.3984937465661, 1.6839586509356, -0.36735112493938, 1.3222359261594, -2.3168462257994, 1.4037935804131, 3.9606537825161, -1.842008789676, 2.7760618851571, 4.5183211722072, -0.064126017734231, 0.80514215101385, -2.1943362795958, -1.8359769982243, -1.3003916698083, -3.4041939418466 ], [ -2.00361725021, 2.7975167289646, -0.53638560783814, 3.2840729670113, 1.092053632637, -2.7858461974701, -0.076563106372593, -1.3025215668836, -3.9055338749957, -1.6811800993319, 0.60310120625347, -3.1893040640062, -3.1208690610135, 3.9371478132593, 1.7176108378316, -3.8510823226965, -1.0796115271321, 2.0667751785874, -2.6934270217158, 5.991583658186, 4.7677112423385, -0.95676422645551, 0.54375806889899, -4.3643096432158 ], [ 3.7092461730577, -5.570809204419, -3.0303910937792, 0.47932792104698, 0.4653578828778, -4.0345764858846, 0.13963771634876, -0.62091278502265, 1.7845436231011, 1.8854165868832, 0.25243738734816, -1.9537296396656, 3.2876254190653, -5.1909408460436, 1.8365096967697, -1.7750622443807, 1.7168814972885, -1.3873539141159, -0.60743336517291, 0.25078304750562, -0.22517603081273, 0.63260731114747, -1.7915480191755, -1.4822057783183 ] ], [ 3.0224205795757, 1.2783997652665, 0.47168946493743, 0.46353254673645, 1.1511992866412, -1.4168514458196, 1.1606483391657, 0.48875100836952, 0.82383893049874, 1.6184168404135, -0.45321183824843, 2.7106668175927, -0.36420577094209, 0.90816876825374, -0.6575929716438, -1.5262163051912, 2.6184305681541, -0.92826474109161, -1.4707641628527, 0.12473803783476, -0.84647942360299, -0.60611384612771, 0.6746331796441, -0.43387350767823 ], 0.2 ]
)


::
